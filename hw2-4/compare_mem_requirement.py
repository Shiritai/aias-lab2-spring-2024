output_shape_cpp = [
    [1, 64, 112, 112],
    [1, 64, 112, 112],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 16, 28, 28],
    [1, 16, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 256, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 192, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 256, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 480, 28, 28],
    [1, 480, 14, 14],
    [1, 192, 14, 14],
    [1, 192, 14, 14],
    [1, 96, 14, 14],
    [1, 96, 14, 14],
    [1, 208, 14, 14],
    [1, 208, 14, 14],
    [1, 16, 14, 14],
    [1, 16, 14, 14],
    [1, 48, 14, 14],
    [1, 48, 14, 14],
    [1, 480, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 224, 14, 14],
    [1, 224, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 144, 14, 14],
    [1, 144, 14, 14],
    [1, 288, 14, 14],
    [1, 288, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 528, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 320, 14, 14],
    [1, 320, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 528, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 832, 14, 14],
    [1, 832, 7, 7],
    [1, 256, 7, 7],
    [1, 256, 7, 7],
    [1, 160, 7, 7],
    [1, 160, 7, 7],
    [1, 320, 7, 7],
    [1, 320, 7, 7],
    [1, 32, 7, 7],
    [1, 32, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 192, 7, 7],
    [1, 192, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 48, 7, 7],
    [1, 48, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 1024, 7, 7],
    [1, 1024, 1, 1],
    [1, 1024, 1, 1],
    [1, 1024],
    [1, 1000],
    [1, 1000],
]

output_shape_py_summary = [
    [1, 64, 112, 112],
    [1, 64, 112, 112],
    [1, 64, 56, 56],
    [1, 64, 114, 114],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 28, 28],
    [1, 192, 58, 58],
    [1, 192, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 16, 28, 28],
    [1, 16, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 256, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 192, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 256, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 480, 28, 28],
    [1, 480, 14, 14],
    [1, 480, 30, 30],
    [1, 480, 14, 14],
    [1, 192, 14, 14],
    [1, 192, 14, 14],
    [1, 96, 14, 14],
    [1, 96, 14, 14],
    [1, 208, 14, 14],
    [1, 208, 14, 14],
    [1, 16, 14, 14],
    [1, 16, 14, 14],
    [1, 48, 14, 14],
    [1, 48, 14, 14],
    [1, 480, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 224, 14, 14],
    [1, 224, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 144, 14, 14],
    [1, 144, 14, 14],
    [1, 288, 14, 14],
    [1, 288, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 528, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 320, 14, 14],
    [1, 320, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 528, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 832, 14, 14],
    [1, 832, 7, 7],
    [1, 832, 16, 16],
    [1, 832, 7, 7],
    [1, 256, 7, 7],
    [1, 256, 7, 7],
    [1, 160, 7, 7],
    [1, 160, 7, 7],
    [1, 320, 7, 7],
    [1, 320, 7, 7],
    [1, 32, 7, 7],
    [1, 32, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 192, 7, 7],
    [1, 192, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 48, 7, 7],
    [1, 48, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 1024, 7, 7],
    [1, 1024, 1, 1],
    [1, 1024, 1, 1],
    [1, 1024],
    [1, 1000],
    [1, 1000],
]

output_py_summary_top_level_only = [
    [1, 64, 112, 112],
    [1, 64, 112, 112],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 64, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 56, 56],
    [1, 192, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 16, 28, 28],
    [1, 16, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 256, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 128, 28, 28],
    [1, 192, 28, 28],
    [1, 192, 28, 28],
    [1, 32, 28, 28],
    [1, 32, 28, 28],
    [1, 96, 28, 28],
    [1, 96, 28, 28],
    [1, 256, 28, 28],
    [1, 64, 28, 28],
    [1, 64, 28, 28],
    [1, 480, 28, 28],
    [1, 480, 14, 14],
    [1, 192, 14, 14],
    [1, 192, 14, 14],
    [1, 96, 14, 14],
    [1, 96, 14, 14],
    [1, 208, 14, 14],
    [1, 208, 14, 14],
    [1, 16, 14, 14],
    [1, 16, 14, 14],
    [1, 48, 14, 14],
    [1, 48, 14, 14],
    [1, 480, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 224, 14, 14],
    [1, 224, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 24, 14, 14],
    [1, 24, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 112, 14, 14],
    [1, 112, 14, 14],
    [1, 144, 14, 14],
    [1, 144, 14, 14],
    [1, 288, 14, 14],
    [1, 288, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 512, 14, 14],
    [1, 64, 14, 14],
    [1, 64, 14, 14],
    [1, 528, 14, 14],
    [1, 256, 14, 14],
    [1, 256, 14, 14],
    [1, 160, 14, 14],
    [1, 160, 14, 14],
    [1, 320, 14, 14],
    [1, 320, 14, 14],
    [1, 32, 14, 14],
    [1, 32, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 528, 14, 14],
    [1, 128, 14, 14],
    [1, 128, 14, 14],
    [1, 832, 14, 14],
    [1, 832, 7, 7],
    [1, 256, 7, 7],
    [1, 256, 7, 7],
    [1, 160, 7, 7],
    [1, 160, 7, 7],
    [1, 320, 7, 7],
    [1, 320, 7, 7],
    [1, 32, 7, 7],
    [1, 32, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 192, 7, 7],
    [1, 192, 7, 7],
    [1, 384, 7, 7],
    [1, 384, 7, 7],
    [1, 48, 7, 7],
    [1, 48, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 832, 7, 7],
    [1, 128, 7, 7],
    [1, 128, 7, 7],
    [1, 1024, 7, 7],
    [1, 1024, 1, 1],
    [1, 1024, 1, 1],
    [1, 1024] ,
    [1, 1000],
    [1, 1000],
]

from functools import reduce

def print_size(l: list, msg: str):
    print(f"{sum(reduce(lambda a, b: a * b, _l, 1) for _l in l) * 4}")
    
print_size(output_shape_cpp, "Mem requirement in CPP")
print_size(output_shape_py_summary, "Mem requirement from torch summary")
print_size(output_py_summary_top_level_only, "Mem requirement from torch summary with top-level-only")